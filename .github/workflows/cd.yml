name: CD
on:
  push:
    branches: [ main ]
    paths:
      - "app/**"
      - "wsgi.py"
      - "config.py"
      - "requirements.txt"
      - "Dockerfile"
      - "docker-compose.yml"
      - ".github/workflows/**"

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Deploy via SSH (git pull + compose up --build)
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script_stop: true
          script: |
            set -e
            cd ${{ secrets.APP_DIR }}

            # 1) obter última versão do código
            if [ ! -d .git ]; then
              git clone ${{ secrets.GIT_REMOTE_URL }} .
            fi
            git fetch --all --prune
            git reset --hard origin/main

            # 2) garantir .env.prod (se já existir, pula)
            if [ ! -f .env.prod ]; then
              cat > .env.prod <<'EOF'
              SECRET_KEY=${{ secrets.SECRET_KEY }}
              JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }}
              EOF
              chmod 600 .env.prod
            fi

            # 3) build com cache local e subida sem interromper
            docker compose --env-file .env.prod up -d --build --remove-orphans

            # 4) limpeza opcional de imagens não usadas
            docker system prune -f

            # 5) checar status/saúde (opcional)
            docker compose ps
